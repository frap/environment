# format = """
# [←](#9A348E)\
# $username\
# [→](bg:#DA627D fg:#9A348E)\
# $directory\
# [→](fg:#DA627D bg:#FCA17D)\
# $git_branch\
# $git_status\
# [→](fg:#FCA17D bg:#86BBD8)\
# #$terraform\
# #$kubernetes\
# #[→](fg:#86BBD8 bg:#06969A)\
# #$docker_context\
# #[→](fg:#06969A bg:#33658A)\
# $time\
# [→ ](fg:#33658A)\
# """
# format = """
# [←](#9A348E)\
# $username\
# [→](bg:#DA627D fg:#9A348E)\
# $directory\
# $git_branch\
# $git_status\
# [→](fg:#FCA17D bg:#86BBD8)\
# $java\
# $custom\
# $python\
# $nodejs\
# $rust\
# $time\
# $character\
# """

# Disable the blank line at the start of the prompt
#add_newline = false
 
# You can also replace your username with a neat symbol like  to save some space
[username]
#symbol = " "
show_always = false
#style_user = "bold dimmed blue"
style_user = "bold cyan bg:#9A348E"
style_root = "bg:#9A348E"
#format = '[$symbol ] ($style)'
 
[directory]
#style = "bg:#DA627D"
style = "bold italic blue"
read_only = " "
format = "[ $path ]($style)"
truncation_length = 3
truncate_to_repo = true # truncates directory to root folder if in github repo
truncation_symbol = "…/"
 
# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "📄 "
"Downloads" = "📥 "
"Music" = "🎜 "
"Pictures" = "📷 "
# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "
 
[aws]
symbol = " "
disabled = true

[battery]
full_symbol = "🔋"
charging_symbol = "🔌"
discharging_symbol = "⚡"

[[battery.display]]
threshold = 30
style = "bold red"

[c]
symbol = "© "
style = "bg:#86BBD8"
detect_files = [".c"]
format = '[→](fg:#DA627D bg:#FCA17D)[[ $symbol($version) ](bg:#86BBD8)]($style)'

[character]
error_symbol = "[✖](bold red)"
success_symbol = "[➜](bold green)"

[cmd_duration]
# $duration – The command duration (e.g. "15s")
# $style    – The default style of the module (e.g. "bold yellow")
#format = "took [$duration]($yellow) "
disabled = true

[conda]
symbol = " "

[dart]
symbol = " "

[docker_context]
symbol = "🐳 "
#symbol = " "
detect_files = ["Dockerfile", "docker-compose.yml", "docker-entrypoint.sh" ]
style = "bg:#06969A"
format = '[→](fg:#06969A bg:#33658A)[[$symbol $context](bg:#06969A)]($style) $path'

[elixir]
symbol = " "

[elm]
symbol = "🌳 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[git_branch]
symbol = "🌱 "
#symbol = " "
style = "bg:#FCA17D"
format = '[[→ $symbol$branch ](bg:#FCA17D)]($style)'

[git_status]
#style = "bg:#FCA17D"
conflicted = "⚔️ "
ahead = "🏎️ 💨 ×${count}"
behind = "🐢 ×${count}"
diverged = "🔱 🏎️ 💨 ×${ahead_count} 🐢 ×${behind_count}"
untracked = "🛤️  ×${count}"
stashed = "📦 "
modified = "📝 ×${count}"
staged = "🗃️  ×${count}"
renamed = "📛 ×${count}"
deleted = "🗑️  ×${count}"
style = "bright-white"
format = '[[($all_status$ahead_behind )](bg:#FCA17D)]($style)'

[golang]
symbol = " "

[haskell]
symbol = " "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[hg_branch]
symbol = " "

[java]
symbol = " "
disabled=false
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[julia]
symbol = " "

[kubernetes]
format = '▶️[🕸️ $context \($namespace\)](dimmed cyan) '
disabled = true
[kubernetes.context_aliases]
"dev.local.cluster.k8s" = "dev"

[localip]
ssh_only = true
format = "@[$localipv4](bold cyan) "
disabled = false

[memory_usage]
symbol = " "

#[nim]
#symbol = " "

#[nix_shell]
#symbol = " "

[nodejs]
#symbol = "🔷 "
#style = "bg:#86BBD8"
#format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
format = "via [ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]
#symbol = " "

[package]
symbol = " "

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = "🐍 "
#symbol = " "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[ruby]
symbol = " "

[rust]
symbol = "🦀"
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

#[swift]
#symbol = "ﯣ "

[custom.clj]
disabled = false
detect_files =  ["deps.edn", "bb.edn", ".clj", ".cljs"]
command = "rg org.clojure/clojure deps.edn | cut -d '{' -f3 "
symbol = "λ "
format = "$symbol $command($blue)"

[time]
time_format = "%R" # Hour:Minute Format 
format = "🕙 $time($style) "
style = "bright-white"
disabled = false
#style = "bg:#33658A"
#format = '[[ 🤍 $time ](bg:#33658A)]($style)'
#utc_time_offset = "12"




