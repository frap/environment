# -*- mode: sh; -*-
# From bash manual:
# If bash is invoked with the name sh, as an interactive login shell, or as
# a non-interactive shell with the --login option, it first attempts to read
# and execute commands from /etc/profile and ~/.profile, in that order. When
# invoked as an interactive shell with the name sh, Bash looks for the
# variable ENV, expands its value if it is defined, and uses the expanded
# value as the name of a file to read and execute. Since a shell invoked as
# sh does not attempt to read and execute commands from any other startup
# files, the --rcfile option has no effect. A non-interactive shell invoked
# with the name sh does not attempt to read any other startup files.
# -*- mode: sh; -*-
# From bash manual:
# If bash is invoked with the name sh, as an interactive login shell, or as
# a non-interactive shell with the --login option, it first attempts to read
# and execute commands from /etc/profile and ~/.profile, in that order. When
# invoked as an interactive shell with the name sh, Bash looks for the
# variable ENV, expands its value if it is defined, and uses the expanded
# value as the name of a file to read and execute. Since a shell invoked as
# sh does not attempt to read and execute commands from any other startup
# files, the --rcfile option has no effect. A non-interactive shell invoked
# with the name sh does not attempt to read any other startup files.
# Therefore we need to set $ENV so that if you use shell X as your login shell,
# and then start "sh" as a non-login interactive shell the startup scripts will
# correctly run.
export ENV=~/.config/sh/interactive

# The XDG_ variables definitions:
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html#variables

###############################
# EXPORT ENVIRONMENT VARIABLE #
###############################

## XDG
[[ -z ${XDG_CONFIG_HOME:-} ]] && export XDG_CONFIG_HOME="$HOME/.config"
[[ -z ${XDG_CACHE_HOME:-} ]]  && export XDG_CACHE_HOME="$HOME/.cache"
[[ -z ${XDG_DATA_HOME:-} ]]  && export XDG_DATA_HOME="$HOME/.local/share"
[[ -z ${XDG_STATE_HOME:-} ]] && export XDG_STATE_HOME="$HOME/.local/state"


# import local fns like ssource
. ${XDG_CONFIG_HOME}/shell/env_fns

# 077 would be more secure, but 022 is more useful.
#umask 0077
umask 022

ssource ~/${XDG_CONFIG_HOME}/shell/env_local
