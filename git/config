[core]
editor = emacs
autocrlf = input
ignorecase = false

[user]
useconfigonly = true

[commit]
gpgsign = false

[alias]
# git add
a = add
ap = add -p
aa = add .
ac = !git add -A && git commit -m

# git branches
# list branches sorted by last modified
 b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

# git commit
c = commit  --verbose
ca = commit -a --verbose
cm = commit -m
cam = commit -a -m
m = commit --amend --verbose

changelog = log --pretty=format:'%Cgreen%d %Creset%s' --date=iso
cl =!git clone git@github.com:$1.git
cleanup-branches = !git fetch -a -p origin master && git branch --merged master | grep -v 'master$' | xargs git branch -d || true

# git checkout
co = checkout
cob = checkout -b
cb = !git rev-parse --abbrev-ref HEAD 2>/dev/null

#diff
d = diff
dc = diff --cached
ds = diff --stat
wd = diff --color-words
wdc = diff --color-words --cached

last = rev-parse HEAD

# logs
l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
lg='git log --graph --oneline --decorate --all'
lo = log --graph --oneline --abbrev-commit
#lg = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)<%an> -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset'
ll = log --graph --pretty='format:%h | %an | %s'
llog = log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=iso

# list aliases
la = "!git config -l | grep alias | cut -c 7-"

meff = merge --no-ff

# git push/pull
pr = pull --rebase
pl = !git pull -r -u origin $(git cb)

pfff = !git push --force origin $(git cb)
pullall = pull --recurse-submodules -r
pushall = "!for r in $(git remote); do git push $r $(git symbolic-ref --short HEAD); done && for r in $(git remote); do git push $r --tags; done"
push-and-track= !git push -u origin $(git cb)
safe-pull = !git stash && git pull -r origin $(git cb) && git stash pop
update = !git fetch -a -p && git pull -r && git remove-merged-branches

recent= "!f(){ git branch --sort=-committerdate | head -n ${1:-5}; };f"
re-continue = rebase --continue
re-skip = rebase --skip
root = rev-parse --show-toplevel

# git status
ss = status
s = status -sb

zip-current-branch = !git archive --format zip --output ./$(pwd | rev | cut -d/ -f1 | rev).zip $(git cb)

[push]
default = simple

[pull]
rebase = false

[init]
defaultBranch = main

[filter "lfs"]
required = true
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
process = git-lfs filter-process

[color]
branch = auto
diff = auto
interactive = auto
status = auto

[gpg]
program = gpg2

[diff]
compactionHeuristic = true

[github]
user = frap

[gitlab]
user = agasson

[magithub]
online = true

[magithub "status"]
includeStatusHeader = true
includePullRequestsSection = false
includeIssuesSection = false

[include]
path = local.config

[hub]
protocol = https
